{
	"info": {
		"_postman_id": "8a3b3dfd-227d-499a-8bb3-756b83c13fc7",
		"name": "spaceX",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "New Request",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const getSpaceXResponse = pm.response.json();\r",
							"const schema = {\r",
							"  \"type\": \"object\",\r",
							"  \"properties\": {\r",
							"    \"fairings\": {\r",
							"      \"type\": \"object\",\r",
							"      \"properties\": {\r",
							"        \"reused\": {\r",
							"          \"type\": \"null\"\r",
							"        },\r",
							"        \"recovery_attempt\": {\r",
							"          \"type\": \"boolean\"\r",
							"        },\r",
							"        \"recovered\": {\r",
							"          \"type\": \"null\"\r",
							"        },\r",
							"        \"ships\": {\r",
							"          \"type\": \"array\",\r",
							"          \"items\": [\r",
							"            {\r",
							"              \"type\": \"string\"\r",
							"            }\r",
							"          ]\r",
							"        }\r",
							"      },\r",
							"      \"required\": [\r",
							"        \"reused\",\r",
							"        \"recovery_attempt\",\r",
							"        \"recovered\",\r",
							"        \"ships\"\r",
							"      ]\r",
							"    },\r",
							"    \"links\": {\r",
							"      \"type\": \"object\",\r",
							"      \"properties\": {\r",
							"        \"patch\": {\r",
							"          \"type\": \"object\",\r",
							"          \"properties\": {\r",
							"            \"small\": {\r",
							"              \"type\": \"string\"\r",
							"            },\r",
							"            \"large\": {\r",
							"              \"type\": \"string\"\r",
							"            }\r",
							"          },\r",
							"          \"required\": [\r",
							"            \"small\",\r",
							"            \"large\"\r",
							"          ]\r",
							"        },\r",
							"        \"reddit\": {\r",
							"          \"type\": \"object\",\r",
							"          \"properties\": {\r",
							"            \"campaign\": {\r",
							"              \"type\": \"string\"\r",
							"            },\r",
							"            \"launch\": {\r",
							"              \"type\": \"string\"\r",
							"            },\r",
							"            \"media\": {\r",
							"              \"type\": \"null\"\r",
							"            },\r",
							"            \"recovery\": {\r",
							"              \"type\": \"string\"\r",
							"            }\r",
							"          },\r",
							"          \"required\": [\r",
							"            \"campaign\",\r",
							"            \"launch\",\r",
							"            \"media\",\r",
							"            \"recovery\"\r",
							"          ]\r",
							"        },\r",
							"        \"flickr\": {\r",
							"          \"type\": \"object\",\r",
							"          \"properties\": {\r",
							"            \"small\": {\r",
							"              \"type\": \"array\",\r",
							"              \"items\": {}\r",
							"            },\r",
							"            \"original\": {\r",
							"              \"type\": \"array\",\r",
							"              \"items\": {}\r",
							"            }\r",
							"          },\r",
							"          \"required\": [\r",
							"            \"small\",\r",
							"            \"original\"\r",
							"          ]\r",
							"        },\r",
							"        \"presskit\": {\r",
							"          \"type\": \"null\"\r",
							"        },\r",
							"        \"webcast\": {\r",
							"          \"type\": \"string\"\r",
							"        },\r",
							"        \"youtube_id\": {\r",
							"          \"type\": \"string\"\r",
							"        },\r",
							"        \"article\": {\r",
							"          \"type\": \"null\"\r",
							"        },\r",
							"        \"wikipedia\": {\r",
							"          \"type\": \"string\"\r",
							"        }\r",
							"      },\r",
							"      \"required\": [\r",
							"        \"patch\",\r",
							"        \"reddit\",\r",
							"        \"flickr\",\r",
							"        \"presskit\",\r",
							"        \"webcast\",\r",
							"        \"youtube_id\",\r",
							"        \"article\",\r",
							"        \"wikipedia\"\r",
							"      ]\r",
							"    },\r",
							"    \"static_fire_date_utc\": {\r",
							"      \"type\": \"string\"\r",
							"    },\r",
							"    \"static_fire_date_unix\": {\r",
							"      \"type\": \"integer\"\r",
							"    },\r",
							"    \"net\": {\r",
							"      \"type\": \"boolean\"\r",
							"    },\r",
							"    \"window\": {\r",
							"      \"type\": \"null\"\r",
							"    },\r",
							"    \"rocket\": {\r",
							"      \"type\": \"string\"\r",
							"    },\r",
							"    \"success\": {\r",
							"      \"type\": \"boolean\"\r",
							"    },\r",
							"    \"failures\": {\r",
							"      \"type\": \"array\",\r",
							"      \"items\": {}\r",
							"    },\r",
							"    \"details\": {\r",
							"      \"type\": \"string\"\r",
							"    },\r",
							"    \"crew\": {\r",
							"      \"type\": \"array\",\r",
							"      \"items\": {}\r",
							"    },\r",
							"    \"ships\": {\r",
							"      \"type\": \"array\",\r",
							"      \"items\": [\r",
							"        {\r",
							"          \"type\": \"string\"\r",
							"        },\r",
							"        {\r",
							"          \"type\": \"string\"\r",
							"        },\r",
							"        {\r",
							"          \"type\": \"string\"\r",
							"        }\r",
							"      ]\r",
							"    },\r",
							"    \"capsules\": {\r",
							"      \"type\": \"array\",\r",
							"      \"items\": {}\r",
							"    },\r",
							"    \"payloads\": {\r",
							"      \"type\": \"array\",\r",
							"      \"items\": [\r",
							"        {\r",
							"          \"type\": \"string\"\r",
							"        }\r",
							"      ]\r",
							"    },\r",
							"    \"launchpad\": {\r",
							"      \"type\": \"string\"\r",
							"    },\r",
							"    \"flight_number\": {\r",
							"      \"type\": \"integer\"\r",
							"    },\r",
							"    \"name\": {\r",
							"      \"type\": \"string\"\r",
							"    },\r",
							"    \"date_utc\": {\r",
							"      \"type\": \"string\"\r",
							"    },\r",
							"    \"date_unix\": {\r",
							"      \"type\": \"integer\"\r",
							"    },\r",
							"    \"date_local\": {\r",
							"      \"type\": \"string\"\r",
							"    },\r",
							"    \"date_precision\": {\r",
							"      \"type\": \"string\"\r",
							"    },\r",
							"    \"upcoming\": {\r",
							"      \"type\": \"boolean\"\r",
							"    },\r",
							"    \"cores\": {\r",
							"      \"type\": \"array\",\r",
							"      \"items\": [\r",
							"        {\r",
							"          \"type\": \"object\",\r",
							"          \"properties\": {\r",
							"            \"core\": {\r",
							"              \"type\": \"string\"\r",
							"            },\r",
							"            \"flight\": {\r",
							"              \"type\": \"integer\"\r",
							"            },\r",
							"            \"gridfins\": {\r",
							"              \"type\": \"boolean\"\r",
							"            },\r",
							"            \"legs\": {\r",
							"              \"type\": \"boolean\"\r",
							"            },\r",
							"            \"reused\": {\r",
							"              \"type\": \"boolean\"\r",
							"            },\r",
							"            \"landing_attempt\": {\r",
							"              \"type\": \"boolean\"\r",
							"            },\r",
							"            \"landing_success\": {\r",
							"              \"type\": \"boolean\"\r",
							"            },\r",
							"            \"landing_type\": {\r",
							"              \"type\": \"string\"\r",
							"            },\r",
							"            \"landpad\": {\r",
							"              \"type\": \"string\"\r",
							"            }\r",
							"          },\r",
							"          \"required\": [\r",
							"            \"core\",\r",
							"            \"flight\",\r",
							"            \"gridfins\",\r",
							"            \"legs\",\r",
							"            \"reused\",\r",
							"            \"landing_attempt\",\r",
							"            \"landing_success\",\r",
							"            \"landing_type\",\r",
							"            \"landpad\"\r",
							"          ]\r",
							"        }\r",
							"      ]\r",
							"    },\r",
							"    \"auto_update\": {\r",
							"      \"type\": \"boolean\"\r",
							"    },\r",
							"    \"tbd\": {\r",
							"      \"type\": \"boolean\"\r",
							"    },\r",
							"    \"launch_library_id\": {\r",
							"      \"type\": \"string\"\r",
							"    },\r",
							"    \"id\": {\r",
							"      \"type\": \"string\"\r",
							"    }\r",
							"  },\r",
							"  \"required\": [\r",
							"    \"fairings\",\r",
							"    \"links\",\r",
							"    \"static_fire_date_utc\",\r",
							"    \"static_fire_date_unix\",\r",
							"    \"net\",\r",
							"    \"window\",\r",
							"    \"rocket\",\r",
							"    \"success\",\r",
							"    \"failures\",\r",
							"    \"details\",\r",
							"    \"crew\",\r",
							"    \"ships\",\r",
							"    \"capsules\",\r",
							"    \"payloads\",\r",
							"    \"launchpad\",\r",
							"    \"flight_number\",\r",
							"    \"name\",\r",
							"    \"date_utc\",\r",
							"    \"date_unix\",\r",
							"    \"date_local\",\r",
							"    \"date_precision\",\r",
							"    \"upcoming\",\r",
							"    \"cores\",\r",
							"    \"auto_update\",\r",
							"    \"tbd\",\r",
							"    \"launch_library_id\",\r",
							"    \"id\"\r",
							"  ]\r",
							"};\r",
							"\r",
							"pm.test(\"validate the json  response logic\",function()\r",
							"{\r",
							" console.log(getSpaceXResponse);\r",
							" const jsonData =pm.response.json();\r",
							"    console.log(jsonData)\r",
							"    pm.expect(jsonData.details).to.eql(\"The mission consists in launching 52 Starlink v1.5 satellites to Shell number 4 at 53.2°. This is unusual as the mission is launching from Vandenberg as these missions usually launch from the East Coast.\");\r",
							" \r",
							"}\r",
							");\r",
							"\r",
							"\r",
							"pm.test(\"validate the json  response schemna\",function()\r",
							"{\r",
							"    pm.response.to.have.jsonSchema(schema);\r",
							"    pm.response.to.have.status(200);\r",
							"   pm.response.to.header(\"Content-Type\");\r",
							"pm.expect(pm.response.headers.get(\"Content-Type\")).to.eql(\"application/json; charset=utf-8\");\r",
							"\r",
							"pm.expect(pm.response.responseTime).to.below(1200);\r",
							"    \r",
							"}\r",
							");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{mainUrl}}/v4/launches/latest",
					"host": [
						"{{mainUrl}}"
					],
					"path": [
						"v4",
						"launches",
						"latest"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "mainUrl",
			"value": "https://api.spacexdata.com"
		}
	]
}